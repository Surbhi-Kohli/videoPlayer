[{"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\index.js":"1","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\App.js":"2","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\reportWebVitals.js":"3","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\Components\\Video.js":"4","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\firestore.js":"5","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\dataContext.js":"6","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\reducer\\rootReducer.js":"7","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\Components\\Chart.js":"8"},{"size":715,"mtime":1612722541578,"results":"9","hashOfConfig":"10"},{"size":1364,"mtime":1612777456269,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":6734,"mtime":1612693903785,"results":"13","hashOfConfig":"10"},{"size":504,"mtime":1611753530046,"results":"14","hashOfConfig":"10"},{"size":591,"mtime":1611661019895,"results":"15","hashOfConfig":"16"},{"size":602,"mtime":1611738776336,"results":"17","hashOfConfig":"10"},{"size":2914,"mtime":1612724279829,"results":"18","hashOfConfig":"10"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"b1znoj",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qs5vq8",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\index.js",[],["38","39"],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\App.js",[],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\reportWebVitals.js",[],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\Components\\Video.js",["40","41","42","43","44","45","46","47","48","49","50"],"import React ,{useState,useEffect,useRef} from \"react\";\r\nimport firebase from \"../firestore\";\r\nimport classes from \"./Video.module.css\";\r\nimport images from \"../assets/dashboard2.png\";\r\nimport forwardBtn from  \"../assets/forward.png\";\r\nimport rewindButton from \"../assets/back.png\";\r\nimport rpmIcon from \"../assets/rpmIcon.png\";\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport Chart from \"./Chart\";\r\nimport audio from \"../assets/audio.png\";\r\n\r\n\r\n const Video=(props)=>{\r\n     const videoRef = useRef();\r\n     const progressRef=useRef();\r\n     const  [icon,setIcon]=useState('►');\r\n     const  [progressWidth,setProgressWidth]=useState(0.1);\r\n     const dispatch=useDispatch();\r\n     const data=useSelector((state)=>state.data);\r\n     const rpm=useSelector((state)=>state.rpm);\r\n     const mph=useSelector((state)=>state.mph);\r\n\r\n     useEffect(()=>{\r\n       function registerAListener(){\r\n        videoRef.current.addEventListener('timeupdate',handleChange);\r\n       }\r\n       registerAListener();\r\n       return ()=>{ if(videoRef && videoRef.current)videoRef.current.removeEventListener('timeupdate',handleChange);}\r\n     },[data,mph,rpm]);\r\n \r\n     useEffect(()=>{\r\n      const db = firebase.firestore();\r\n     fetch('https://videoanalytics-server.herokuapp.com/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ query: `\r\n       query {\r\n         data {\r\n           rpm\r\n           mph\r\n           timeLowerLimit\r\n           timeUpperLimit    \r\n          }\r\n      }` \r\n  }),\r\n})\r\n .then(res => res.json())\r\n.then(res => {console.log(res.data.data);\r\n\r\n dispatch({type:'add',val:res.data.data})\r\n});\r\n     },[]);\r\n\r\n     const handleChange=()=>{\r\n        \r\n       let width=(videoRef.current.currentTime/videoRef.current.duration)*100;\r\n       setProgressWidth(width);\r\n       let time=videoRef.current.currentTime/60;\r\n    \r\n       data.map(entry=>{\r\n     \r\n        if(time<entry.timeUpperLimit && time>entry.timeLowerLimit)\r\n        {  \r\n          dispatch({type:'changeMph',val:entry.mph})\r\n          dispatch({type:'changeRpm',val:entry.rpm});\r\n        }\r\n      });    \r\n       if(width==100)\r\n       { \r\n        resetVideoStatus();\r\n       }\r\n     }\r\n\r\n     const toggle=()=>{\r\n        \r\n        if(videoRef.current.paused)\r\n        {\r\n           setIcon('❚❚');\r\n           videoRef.current.play();\r\n        }\r\n       \r\n        else {\r\n           setIcon('►')\r\n           videoRef.current.pause();\r\n        }\r\n     }\r\n     const resetVideoStatus=()=>{\r\n       videoRef.current.pause();\r\n       setProgressWidth(0.5);\r\n       setIcon('►');\r\n       dispatch({type:'changeMph',val:\"0\"})\r\n       dispatch({type:'changeRpm',val:\"0\"});\r\n     }\r\n     const progressChange=(e)=>{\r\n        const scrubTime=(e.nativeEvent.offsetX/progressRef.current.offsetWidth)*videoRef.current.duration;\r\n      //  console.log(\"scrubTime is \"+scrubTime);\r\n        videoRef.current.currentTime=scrubTime;                                                                       \r\n     }\r\n     const sliderHandler=(event)=>{\r\n      let prop=event.target.name;\r\n      videoRef.current[prop]=event.target.value;\r\n     }\r\n\r\n     const skipVideo=(event)=>{\r\n      \r\n      videoRef.current.currentTime+=parseFloat(event.currentTarget.dataset.skip);  \r\n     }\r\n     return (\r\n       <div className={classes.player}>\r\n         <video\r\n          data-test=\"tag-video\"\r\n           className={classes.player__video}\r\n           ref={videoRef}\r\n           onClick={toggle}\r\n           src={props.src}\r\n           type=\"video/mp4\"\r\n         />\r\n      \r\n         <div className={classes.dynamicControls}>\r\n           <div className={classes.mph}>\r\n          <img src={images} style={{width:'40px',height:'40px'}}/>\r\n          <span>{mph}</span>\r\n           </div>\r\n           <div className={classes.mph}>\r\n           <img src={rpmIcon} style={{width:'40px',height:'40px'}}/>\r\n            <span data-test=\"rpm\">{rpm}</span>\r\n           </div>\r\n         </div>\r\n         <div className={classes.player__controls}>\r\n           {/* <div\r\n             data-test=\"progress\"\r\n             className={classes.progress}\r\n             ref={progressRef}\r\n             onClick={progressChange}\r\n           >\r\n             <div\r\n             data-test=\"progressFilled\"\r\n               className={classes.progress__filled}\r\n               style={{ flexBasis: `${progressWidth}%` }}\r\n             ></div>\r\n           </div> */}\r\n           <div className={classes.controlButtons} >\r\n            <div className={classes.controlCapsule}>\r\n             <button\r\n               data-skip=\"-10\"\r\n               className={classes.icon}\r\n               onClick={skipVideo}\r\n             >\r\n               <img src={rewindButton} style={{width:'29px',height:'32px',backgroundColor:'lightgray',borderRadius:'5px'}}/>\r\n             </button>\r\n             <button\r\n               className={classes.player__button}\r\n               onClick={toggle}\r\n               title=\"Toggle Play\"\r\n             >\r\n               {icon}\r\n             </button>\r\n             <button\r\n               data-skip=\"25\"\r\n               className={classes.icon}\r\n               onClick={skipVideo}\r\n             >\r\n               <img src={forwardBtn} style={{width:'29px',height:'32px',backgroundColor:'lightgray',borderRadius:'5px'}}/>\r\n             </button>\r\n             </div>\r\n             <div style={{display:'flex',alignItems:'center'}}>\r\n             {/* <input\r\n               type=\"range\"\r\n               name=\"playbackRate\"\r\n               className=\"player__slider\"\r\n               min=\"0.5\"\r\n               max=\"2\"\r\n               step=\"0.1\"\r\n               onChange={sliderHandler}\r\n             /> */}\r\n             <img src={audio} style={{width:'25px',height:'25px'}}/>\r\n             <input\r\n               type=\"range\"\r\n               name=\"volume\"\r\n               className=\"player__slider\"\r\n               min=\"0\"\r\n               max=\"1\"\r\n               step=\"0.05\"\r\n               onChange={sliderHandler}\r\n             />\r\n              \r\n             </div>\r\n           </div>\r\n           \r\n         </div>\r\n         <div className={classes.chart}>\r\n         <div\r\n             data-test=\"progress\"\r\n             className={classes.progress}\r\n             ref={progressRef}\r\n             onClick={progressChange}\r\n           >\r\n             <div\r\n             data-test=\"progressFilled\"\r\n               className={classes.progress__filled}\r\n               style={{ flexBasis:`${progressWidth}%` }}\r\n             ></div>\r\n           </div>\r\n          <Chart time={videoRef.current?Math.ceil(videoRef.current.currentTime/60):0}/>\r\n       </div>\r\n       </div>\r\n     );\r\n }\r\n export default Video;","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\firestore.js",[],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\dataContext.js",["51"],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\reducer\\rootReducer.js",[],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\custom-video-player\\src\\Components\\Chart.js",["52","53"],"import React ,{useState,useEffect}from \"react\";\r\nimport {useSelector} from 'react-redux';\r\nimport Charts from \"react-apexcharts\";\r\n const Chart=React.memo((props)=> {\r\n \r\n \r\n \r\n  const dataState=useSelector((state)=>state.data);\r\n  const mph=dataState.map(entry=>{\r\n    let id= entry.mph.indexOf(\"m\");\r\n    let val=entry.mph.substr(0,id);\r\n   \r\n    val=+val;\r\n    return val;\r\n  })\r\n  const rpm=dataState.map(entry=>{\r\n    let id= entry.rpm.indexOf(\"r\");\r\n    let val=entry.rpm.substr(0,id);\r\n   \r\n    val=+val;\r\n    return val;\r\n  })\r\n  let chartInfo={\r\n      series: [\r\n        {\r\n          name: \"MPH\",\r\n          type: \"line\",\r\n          data: mph\r\n        },\r\n        {\r\n          name: \"RPM\",\r\n          type: \"line\",\r\n          data: rpm\r\n        }\r\n      ],\r\n      options: {\r\n        chart: {\r\n          height: 350,\r\n          type: \"line\",\r\n          stacked: false\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n         width:[3,3],\r\n        },\r\n        colors: ['#77B6EA', '#FF69B4'],\r\n        xaxis: {\r\n          categories: [1, 2, 3, 4, 5, 6, 7, 8]\r\n        },\r\n        yaxis: [\r\n          {\r\n            axisTicks: {\r\n              show: true\r\n            },\r\n            axisBorder: {\r\n              show: true,\r\n              color: \"#77B6EA\"\r\n            },\r\n            labels: {\r\n              style: {\r\n                colors: \"#77B6EA\"\r\n              }\r\n            },\r\n            title: {\r\n              text: \"mph\",\r\n              style: {\r\n                color: \"#77B6EA\"\r\n              }\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n            }\r\n          },\r\n          {\r\n            seriesName: \"Income\",\r\n            opposite: true,\r\n            axisTicks: {\r\n              show: true\r\n            },\r\n            axisBorder: {\r\n              show: true,\r\n              color: \"#FF69B4\"\r\n            },\r\n            labels: {\r\n              style: {\r\n                colors: \"#FF69B4\"\r\n              }\r\n            },\r\n            title: {\r\n              text: \"rpm\",\r\n              style: {\r\n                color: \"#FF69B4\"\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        tooltip: {\r\n          fixed: {\r\n            enabled: true,\r\n            position: \"topLeft\", // topRight, topLeft, bottomRight, bottomLeft\r\n            offsetY: 30,\r\n            offsetX: 60\r\n          }\r\n        },\r\n        legend: {\r\n            display:'none',\r\n        },\r\n \r\ngrid: {\r\n  xaxis: {\r\n    lines: {\r\n      show: true\r\n    }\r\n  }\r\n}, annotations: {\r\n  xaxis: [{\r\n    strokeDashArray: 0,\r\n    x:props.time,\r\n    borderColor: '#775DD0',\r\n    border:'5px',\r\n    yAxisIndex: 0,\r\n  }],\r\n\r\n}\r\n\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <Charts\r\n        options={chartInfo.options}\r\n        series={chartInfo.series}\r\n        type=\"bar\"\r\n        height={190}\r\n      />\r\n    );\r\n  \r\n});\r\nexport default Chart;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":28,"column":62,"nodeType":"60","endLine":28,"endColumn":69},{"ruleId":"58","severity":1,"message":"61","line":29,"column":8,"nodeType":"62","endLine":29,"endColumn":22,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":32,"column":13,"nodeType":"60","messageId":"66","endLine":32,"endColumn":15},{"ruleId":"58","severity":1,"message":"67","line":52,"column":8,"nodeType":"62","endLine":52,"endColumn":10,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":60,"column":22,"nodeType":"71","messageId":"72","endLine":60,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":68,"column":16,"nodeType":"75","messageId":"76","endLine":68,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":121,"column":11,"nodeType":"79","endLine":121,"endColumn":67},{"ruleId":"77","severity":1,"message":"78","line":125,"column":12,"nodeType":"79","endLine":125,"endColumn":69},{"ruleId":"77","severity":1,"message":"78","line":149,"column":16,"nodeType":"79","endLine":149,"endColumn":125},{"ruleId":"77","severity":1,"message":"78","line":163,"column":16,"nodeType":"79","endLine":163,"endColumn":123},{"ruleId":"77","severity":1,"message":"78","line":176,"column":14,"nodeType":"79","endLine":176,"endColumn":69},{"ruleId":"64","severity":1,"message":"80","line":2,"column":9,"nodeType":"60","messageId":"66","endLine":2,"endColumn":24},{"ruleId":"64","severity":1,"message":"81","line":1,"column":16,"nodeType":"60","messageId":"66","endLine":1,"endColumn":24},{"ruleId":"64","severity":1,"message":"82","line":1,"column":25,"nodeType":"60","messageId":"66","endLine":1,"endColumn":34},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","The ref value 'videoRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'videoRef.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","React Hook useEffect has a missing dependency: 'handleChange'. Either include it or remove the dependency array.","ArrayExpression",["85"],"no-unused-vars","'db' is assigned a value but never used.","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["86"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'createDataStore' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [data, handleChange, mph, rpm]",{"range":"91","text":"92"},"Update the dependencies array to be: [dispatch]",{"range":"93","text":"94"},[1139,1153],"[data, handleChange, mph, rpm]",[1693,1695],"[dispatch]"]